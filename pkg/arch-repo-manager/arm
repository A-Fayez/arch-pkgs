#!/bin/bash
# Wraps aursync command to mount an amazon s3 bucket which contains a repository
set -uo pipefail
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

configs=(
  "${XDG_CONFIG_HOME:-$HOME/.config}/arm/config"
  "/etc/arm/config"
  "../../../arm.conf"
  "../../arm.conf"
  "../arm.conf"
  "arm.conf"
)

for config in "${configs[@]}"; do
    echo "sourcing $config"
    [[ -f "$config" ]] && source "$config"
done

: "${REPO_PATH:?"REPO_PATH missing"}"
: "${BUCKET:?"BUCKET missing"}"
: "${REPO_NAME:?"REPO_NAME missing"}"

DATA_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/arm"

command="$1"
shift

exit_cmd=""
defer() { exit_cmd="$@; $exit_cmd"; }
trap 'bash -c "$exit_cmd"' EXIT

mount_repo() {
    REPO="$(mktemp -d)"
    defer "rmdir '$REPO'"

    s3fs "${BUCKET}:/" "$REPO" -o "nosuid,nodev,default_acl=public-read"
    defer "fusermount -u '$REPO'"
    mkdir -p "$REPO/${REPO_PATH}"
}

clean_chroot() {
    echo "Cleaning up: ${DATADIR}/chroots"
    sudo rm -rf "${DATADIR}/chroots"
}

build() {
    local packages=${@:-pkg/*}
    local chroot="${DATA_DIR}/chroots"

    mkdir -p "$chroot"

    [[ -d "$chroot/root" ]] || mkarchroot -C /etc/pacman.conf $chroot/root base-devel

    for package in $packages; do
        cd "$package"
        rm -f *.pkg.tar.xz
        makechrootpkg -cur $chroot
        cd -
    done

    mount_repo
    for package in $packages; do
        rsync --ignore-existing -v "${package}"/*.pkg.tar.xz "$REPO/$REPO_PATH"
    done
    repose --verbose --xz --root="$REPO/$REPO_PATH" "$REPO_NAME"
}

sync() {
    mount_repo
    aursync --repo mdaffin --root $REPO/$REPO_PATH "$@"
}

shell() {
    mount_repo
    export REPO
    echo "You are now in a subshell with the repo mounted to \$REPO. CTRL+D or type exit to exit"
    $SHELL "$@"
}

case "$command" in
clean-chroot)
    clean_chroot
    ;;
build)
    build "$@"
    ;;
sync)
    sync "$@"
    ;;
shell)
    shell "$@"
    ;;
esac
